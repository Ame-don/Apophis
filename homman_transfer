#from grok, functions for homman transfer

from poliastro.core.iod import lambert
from poliastro.core.elements import coe_rotation_matrix
from poliastro.bodies import Earth, Mars
from poliastro.twobody import Orbit

def hohmann_transfer(ss_earth, ss_mars):
    # Compute departure and arrival positions
    r1, r2 = ss_earth.r, ss_mars.r

    # Compute departure and arrival velocities
    v1, v2 = ss_earth.v, ss_mars.v

    # Compute time of flight
    tof = ss_earth.period / 2

    # Compute transfer orbit
    ss_trans = lambert(Earth.k, r1, r2, tof)

    # Compute rotation matrix
    rotation_matrix = coe_rotation_matrix(ss_trans.inc, ss_trans.raan, ss_trans.argp)

    # Rotate departure and arrival velocities
    v1_trans = rotation_matrix @ v1
    v2_trans = rotation_matrix @ v2

    # Compute departure and arrival orbits
    ss_trans_1 = Orbit.from_vectors(Earth, r1, v1_trans, ss_earth.epoch)
    ss_trans_2 = Orbit.from_vectors(Earth, r2, v2_trans, ss_earth.epoch)

    return ss_trans_1, ss_trans_2
